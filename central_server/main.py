import datetime
import payment
import server_manager
import database
import dotenv
import os

from telebot import TeleBot, types
from database import setup_database, get_user_tariffs, add_payment, check_config_was_generated, add_user_tariff

dotenv.load_dotenv()

TOKEN = os.getenv("TOKEN")
bot = TeleBot(TOKEN)

engine = setup_database()

month_tariff = datetime.datetime.now() + datetime.timedelta(days=30)


# üì≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('üõç –ö—É–ø–∏—Ç—å VPN', 'üì¶ –ú–æ–π —Ç–∞—Ä–∏—Ñ')
    markup.row('üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'üìö FAQ')
    return markup


# üé´ –ú–µ–Ω—é —Ç–∞—Ä–∏—Ñ–æ–≤
def tariff_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('50 –º–±–∏—Ç/—Å–µ–∫', '100 –º–±–∏—Ç/—Å–µ–∫', '300 –º–±–∏—Ç/—Å–µ–∫')
    markup.row('üîô –ù–∞–∑–∞–¥')
    return markup


def payment_menu(payment_url, payment_id):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∏—Ç—å', url=payment_url))
    markup.add(types.InlineKeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–ª–∞—Ç–µ–∂ –∏ –ø–æ–ª—É—á–∏—Ç—å VPN', callback_data=payment_id))
    return markup


@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu())


@bot.message_handler(func=lambda msg: msg.text == 'üõç –ö—É–ø–∏—Ç—å VPN')
def buy_vpn(message):
    with open('static/tariffs.jpg', 'rb') as photo:
        bot.send_photo(message.chat.id, photo, caption="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ:", reply_markup=tariff_menu())


@bot.message_handler(func=lambda msg: msg.text in ['50 –º–±–∏—Ç/—Å–µ–∫', '100 –º–±–∏—Ç/—Å–µ–∫', '300 –º–±–∏—Ç/—Å–µ–∫'])
def choose_tariff(message):
    try:
        speed = int(message.text[:-8])
        value = payment.payment_tariff[message.text]
    except (KeyError, ValueError):
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –≤—ã–±—Ä–∞–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π —Ç–∞—Ä–∏—Ñ.", reply_markup=main_menu())
        return

    payment_info = payment.get_payment(value, f"–û–ø–ª–∞—Ç–∞ —Ç–∞—Ä–∏—Ñ–∞ {message.text}")
    if not payment_info:
        bot.send_message(message.chat.id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–ª–∞—Ç—ë–∂. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", reply_markup=main_menu())
        return

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
    if not server_manager.check_config_availability(speed, payment_info.id):
        bot.send_message(
            message.chat.id,
            "üö´ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∞—Ä–∏—Ñ–∞.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π —Ç–∞—Ä–∏—Ñ.",
            reply_markup=main_menu()
        )
        return

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞—Ç—ë–∂
    add_payment(message.from_user.id, payment_info.id, str(value), speed)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞—Ç–µ–∂–µ
    bot.send_message(
        message.chat.id,
        f"üí≥ –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–ª–∞—Ç–µ–∂–∞: `{payment_info.id}`\n"
        f"–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ç–∞—Ä–∏—Ñ: *{message.text}*",
        reply_markup=payment_menu(payment_info.confirmation.confirmation_url, payment_info.id),
        parse_mode='Markdown'
    )


@bot.callback_query_handler()
def check_payment(call):
    payment_id = call.data

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ –ª–∏ –±—ã–ª —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∫–æ–Ω—Ñ–∏–≥
    if check_config_was_generated(payment_id):
        bot.send_message(
            call.message.chat.id,
            "‚ÑπÔ∏è –ü–ª–∞—Ç—ë–∂ —É–∂–µ –±—ã–ª –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω —Ä–∞–Ω–µ–µ.\n"
            "–í–∞—à —Ç–∞—Ä–∏—Ñ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.",
            reply_markup=main_menu()
        )
        return

    success, payment_info = payment.check_payment(payment_id)

    with database.Session() as session:
        payment_record = session.query(database.Payments).filter(
            database.Payments.payment_id == payment_id
        ).first()

        if not payment_record:
            bot.send_message(
                call.message.chat.id,
                "‚ùå –û—à–∏–±–∫–∞: –ø–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.",
                reply_markup=main_menu()
            )
            return

        speed = payment_record.speed

        if success:
            bot.send_message(
                call.message.chat.id,
                "‚úÖ –ü–ª–∞—Ç–µ–∂ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!\n"
                "–°–æ–∑–¥–∞—ë–º –≤–∞—à—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ...",
                reply_markup=main_menu()
            )
            status, key = add_user_tariff(call.from_user.id, speed, payment_id)

            if status != "OK":
                if status == "Operation blocked":
                    bot.send_message(
                        call.message.chat.id,
                        "üõ†Ô∏è –°–µ—Ä–≤–µ—Ä —Å–µ–π—á–∞—Å –∑–∞–Ω—è—Ç —Å–æ–∑–¥–∞–Ω–∏–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ",
                        reply_markup=main_menu()
                    )
                    return

                bot.send_message(
                    call.message.chat.id,
                    f"‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:\n`{status}`\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.",
                    reply_markup=main_menu(),
                    parse_mode='Markdown'
                )
                return

            bot.send_message(
                call.message.chat.id,
                f"üéâ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n\n"
                f"üîë –í–∞—à –∫–ª—é—á:\n`{key}`\n\n"
                "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è: https://telegra.ph/Kak-podklyuchit-vpn-na-IPHONEANDROID-06-03",
                reply_markup=main_menu(),
                parse_mode='Markdown'
            )

        else:
            bot.send_message(
                call.message.chat.id,
                "‚ùó –ü–ª–∞—Ç–µ–∂ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω.\n"
                "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.",
                reply_markup=main_menu()
            )


@bot.message_handler(func=lambda msg: msg.text == 'üì¶ –ú–æ–π —Ç–∞—Ä–∏—Ñ')
def my_tariff(message):
    tariffs = get_user_tariffs(message.from_user.id)

    if not tariffs:
        bot.send_message(message.chat.id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞—Ä–∏—Ñ–æ–≤.", reply_markup=main_menu())
        return

    text = "üßæ –í–∞—à–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã:\n\n"
    now = datetime.datetime.utcnow()

    for tariff in tariffs:
        days_left = (tariff.expires_at - now).days
        text += (
            f"üí® –¢–∞—Ä–∏—Ñ: {tariff.speed} –º–±–∏—Ç/—Å–µ–∫\n"
            f"üîë –ö–ª—é—á: `{tariff.vpn_key}`\n"
            f"üìÖ –û—Å—Ç–∞–ª–æ—Å—å: {days_left} –¥–Ω–µ–π\n"
            f"‚Äî ‚Äî ‚Äî ‚Äî ‚Äî\n"
        )

    bot.send_message(message.chat.id, text, reply_markup=main_menu(), parse_mode='Markdown')


@bot.message_handler(func=lambda msg: msg.text == 'üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
def support(message):
    bot.send_message(message.chat.id, "–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å: @jestervpn_support", reply_markup=main_menu())


@bot.message_handler(func=lambda msg: msg.text == 'üìö FAQ')
def faq(message):
    bot.send_message(
        message.chat.id,
        "https://telegra.ph/Kak-podklyuchit-vpn-na-IPHONEANDROID-06-03",
        reply_markup=main_menu()
    )


@bot.message_handler(func=lambda msg: msg.text == 'üîô –ù–∞–∑–∞–¥')
def go_back(message):
    bot.send_message(message.chat.id, "–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=main_menu())


bot.infinity_polling()
